set nocompatible
set t_Co=256

" Pretty colors
if filereadable(expand("~/.vimrc_background"))
	let base16colorspace=256
	source ~/.vimrc_background
endif

" Set tabs based on .vimrc_tabs config
if filereadable(expand("~/.vimrc_tabs"))
	source ~/.vimrc_tabs
else
    set expandtab              " Use spaces instead of tabs.
endif

filetype indent plugin on

" Format json
com! FormatJSON %!python -m json.tool

" Hide matching parenthesis
let g:loaded_matchparen=1

syntax on
set showmatch

set cursorline

set nowrap
set number
set encoding=utf-8
set noshowmode
set hidden
set mouse=a

set hlsearch
set incsearch

set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set ignorecase
set smartcase

set autoindent

set novisualbell
set noerrorbells

set ruler
set laststatus=2

set timeout timeoutlen=1000 ttimeoutlen=100 " fix slow O inserts
" disable preview window
set completeopt-=preview

let mapleader = ","

" open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

let delimitMate_expand_cr=1
noremap j gj
noremap k gk

" Window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k 
map <C-l> <C-w>l 

set noswapfile
set nobackup
" Swap files out of the project root
set backupdir=~/.vim/backup
set directory=~/.vim/swap

" Remap VIM 0 to first non-blank character
map 0 ^

" Delete trailing white space on save, useful for Python and CoffeeScript ;)
func! DeleteTrailingWS()
	exe "normal mz"
	%s/\s\+$//ge
	exe "normal `z"
endfunc
autocmd BufWrite *.js :call DeleteTrailingWS()

" Go to the same line after reopening a file
augroup line_return
	au!
	au BufReadPost *
				\ if line("'\"") > 0 && line("'\"") <= line("$") |
				\     execute 'normal! g`"zvzz' |
				\ endif
augroup END

" Remember info about open buffers on close
set viminfo^=%

" Tired of clearing highlighted searches?
nmap <silent> <leader>/ :nohlsearch<CR>

set wildignore+=*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*.swp,*.zip,*.exe  " Windows
